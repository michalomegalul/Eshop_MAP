version: '3.8'

services:
  backend:
    build: .
    ports:
      - "5000:5000"
    volumes:
      - .:/app
    environment:
      - FLASK_ENV=development
      - DATABASE_URL=postgresql://user:password@db:5432/product_db
      - FLASK_RUN_HOST=0.0.0.0
      - FLASK_RUN_PORT=5000
      - FLASK_DEBUG=true
      - API_BASE_URL=http://0.0.0.0:5000/api
      - DATABASE_URL_LOCAL=postgresql://user:password@0.0.0.0:5438/product_db
      - START_SCHEDULER_ON_STARTUP=False
      - STRIPE_SECRET_KEY=sk_test_51Qo5STPsseHpnxsDpzW2r1AHe6TOfSTVEUQCtNhBkNL5IVGEDYLkz7lnoVQgiYe7rNWnM6tgKhCe7t6zM3irnhcP00maPd4Wpa
      - STRIPE_PUBLIC_KEY=pk_test_51Qo5STPsseHpnxsDvD1Bz2MgnmEb9QAEHsNiRBo0gq9EH64cjspzUKDalNaXOKU9tMNLGVG7Ae4ZJEhBzjlwUJBL00fhsd4Cag
      - JWT_SECRET_KEY=0b7d28bd9635e522f2ff534a1e69bc8984e7b62c5fad7efa45e98c73ac94f4939789598531a45958d6d385e393b41fcd159e938894648e9fa46165de3d81b25aca95072e2761e9e4d37e891ed8b9116bd25285557f453d300455469c780de5370b0c7eb3773538f97f05036140f4368771699b1a786e81a0c4d04b3c2169528a7c59e9f88a52d61ba0d246c7000fae88650c6b162535e98deab4e2ff0ed3db0f521b17a6f361928f2db7eaf0f46d7d454591caa479cb0e110dbfc9eb91cfbbba4196b4e4c18581f639a5f8f749934ab05b3979f1ae0e6272c40e398bf2e0c3310ceac991a1c8fbe8021d3cc9160e7e7c603366d16b6ce57b9846afcacfb1cbd0
    depends_on:
      - db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 60s
      retries: 3

#  admin_frontend:
 #   image: nginx:1-alpine
#    volumes:
#      - ./app/templates:/usr/share/nginx/html 
#      - ./app/static:/usr/share/nginx/html/static
#      - ./nginx.conf:/etc/nginx/conf.d/default.conf
#    ports:
#      - "9090:90"
#    depends_on:
#      - backend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "8000:80"
    depends_on:
      - backend

  db:
    image: postgres:13
    restart: always
    environment:
      POSTGRES_USER: 'user'
      POSTGRES_PASSWORD: 'password'
      POSTGRES_DB: 'product_db'
    ports:
      - "5438:5432"

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: 'email@email.com'
      PGADMIN_DEFAULT_PASSWORD: 'password'
    ports:
      - "8080:80"
    depends_on:
      - db
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    depends_on:
      - backend
      - db


  grafana:
    image: grafana/grafana
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

volumes:
  pgadmin_data:
  grafana_data:
  prometheus:
